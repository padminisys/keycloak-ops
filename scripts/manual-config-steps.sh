#!/bin/bash

# Manual Keycloak Configuration Steps
# Run this AFTER the KeycloakRealmImport is deployed via ArgoCD

echo "🔧 Manual Keycloak Configuration Steps"
echo "====================================="
echo ""
echo "Since KeycloakRealmImport CRD has limitations, you need to manually verify"
echo "and configure some settings in the Keycloak Admin Console after deployment."
echo ""

KEYCLOAK_URL="https://iam.padmini.systems"
REALM_NAME="padmini-systems"
CLIENT_ID="ppcs-web-app"

echo "📋 Step 1: Access Keycloak Admin Console"
echo "------------------------------------------"
echo "1. Go to: $KEYCLOAK_URL/admin"
echo "2. Login with admin credentials"
echo "3. Select realm: $REALM_NAME"
echo ""

echo "📋 Step 2: Verify Client Scopes"
echo "--------------------------------"
echo "1. Go to: Client scopes (left sidebar)"
echo "2. Verify these scopes exist:"
echo "   ✓ openid"
echo "   ✓ profile" 
echo "   ✓ email"
echo "   ✓ mobile"
echo ""
echo "3. If any scope is missing, create it manually with these settings:"
echo ""
echo "   📌 openid scope:"
echo "   - Protocol: openid-connect"
echo "   - Include in token scope: ON"
echo "   - Display on consent screen: OFF"
echo ""
echo "   📌 profile scope:"
echo "   - Protocol: openid-connect"
echo "   - Include in token scope: ON"
echo "   - Display on consent screen: ON"
echo "   - Add protocol mappers: username, given_name, family_name, name"
echo ""
echo "   📌 email scope:"
echo "   - Protocol: openid-connect"
echo "   - Include in token scope: ON"
echo "   - Display on consent screen: ON"
echo "   - Add protocol mappers: email, email_verified"
echo ""
echo "   📌 mobile scope:"
echo "   - Protocol: openid-connect"
echo "   - Include in token scope: ON"
echo "   - Display on consent screen: ON"
echo "   - Add protocol mapper: mobile (user attribute)"
echo ""

echo "📋 Step 3: Configure Client ($CLIENT_ID)"
echo "----------------------------------------"
echo "1. Go to: Clients → $CLIENT_ID"
echo "2. Settings Tab - Verify:"
echo "   ✓ Client authentication: OFF"
echo "   ✓ Standard flow enabled: ON"
echo "   ✓ Valid redirect URIs: http://localhost:3000/api/auth/callback/keycloak"
echo "   ✓ Web origins: http://localhost:3000"
echo ""
echo "3. Client Scopes Tab - Configure:"
echo "   📌 Assigned Default Client Scopes should include:"
echo "   ✓ openid"
echo "   ✓ profile"
echo "   ✓ email"
echo "   ✓ web-origins"
echo "   ✓ roles"
echo "   ✓ acr"
echo ""
echo "   📌 Assigned Optional Client Scopes should include:"
echo "   ✓ mobile"
echo "   ✓ address"
echo "   ✓ phone"
echo "   ✓ offline_access"
echo ""

echo "📋 Step 4: Configure User Profile"
echo "----------------------------------"
echo "1. Go to: Realm settings → User profile"
echo "2. Add mobile attribute if not exists:"
echo "   - Attribute name: mobile"
echo "   - Display name: Mobile Number"
echo "   - Required for: user role"
echo "   - Validation: ^[+]?[1-9]\\\\d{9,14}\$"
echo "   - Permissions: admin (view/edit), user (view/edit)"
echo ""

echo "📋 Step 5: Test User Registration"
echo "----------------------------------"
echo "1. Create a test user with mobile number"
echo "2. Verify mobile attribute is captured"
echo "3. Test login flow with NextJS app"
echo ""

echo "📋 Step 6: Verify JWT Token Claims"
echo "-----------------------------------"
echo "After successful login, JWT should contain:"
echo "   ✓ sub (user ID)"
echo "   ✓ preferred_username"
echo "   ✓ given_name"
echo "   ✓ family_name"
echo "   ✓ name"
echo "   ✓ email"
echo "   ✓ email_verified"
echo "   ✓ mobile"
echo ""

echo "🔍 Testing URLs:"
echo "----------------"
echo "1. OIDC Discovery: $KEYCLOAK_URL/realms/$REALM_NAME/.well-known/openid-configuration"
echo "2. User registration: $KEYCLOAK_URL/realms/$REALM_NAME/protocol/openid-connect/registrations?client_id=$CLIENT_ID&response_type=code&scope=openid%20profile%20email%20mobile&redirect_uri=http://localhost:3000/api/auth/callback/keycloak"
echo ""

echo "✅ Manual configuration complete!"
echo ""
echo "💡 Tips:"
echo "- Start with scope 'openid' only in NextJS"
echo "- Add scopes gradually: 'openid profile', then 'openid profile email', then 'openid profile email mobile'"
echo "- Check browser network tab for exact error messages"
echo "- Verify scopes are properly assigned to client in Admin Console"
