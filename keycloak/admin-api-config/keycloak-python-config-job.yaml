apiVersion: batch/v1
kind: Job
metadata:
  name: keycloak-python-config-job
  namespace: keycloak
  annotations:
    argocd.argoproj.io/sync-wave: "10"  # Final step after manual verification
  labels:
    app.kubernetes.io/name: keycloak-python-config
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: keycloak
    app.kubernetes.io/managed-by: argocd
spec:
  template:
    metadata:
      name: keycloak-python-config
      labels:
        app.kubernetes.io/name: keycloak-python-config
        app.kubernetes.io/component: configuration
    spec:
      containers:
      - name: keycloak-python-config
        image: ghcr.io/padminisys/keycloak-config:latest
        imagePullPolicy: Always
        env:
        # Action to perform (create, destroy, validate)
        - name: ACTION
          value: "create"
        # Keycloak connection details
        - name: KEYCLOAK_URL
          value: "http://padmini-keycloak-service:8180"
        # Admin credentials from secret
        - name: KEYCLOAK_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-admin
              key: KEYCLOAK_ADMIN_USERNAME
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-admin
              key: KEYCLOAK_ADMIN_PASSWORD
        # SMTP configuration from secret
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-smtp
              key: SMTP_HOST
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-smtp
              key: SMTP_PORT
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-smtp
              key: SMTP_USER
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: padmini-keycloak-smtp
              key: SMTP_PASSWORD
        - name: SMTP_AUTH
          value: "true"
        - name: SMTP_SSL
          value: "false"
        - name: SMTP_STARTTLS
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      # Ensure job runs after Keycloak is ready
      initContainers:
      - name: wait-for-keycloak
        image: curlimages/curl:8.4.0
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "⏳ Waiting for Keycloak service to be ready..."
          # Check if Keycloak service is responding on port 8180
          until curl -s -f --connect-timeout 5 http://padmini-keycloak-service:8180/ >/dev/null 2>&1; do
            echo "Keycloak service not responding, waiting..."
            sleep 10
          done
          echo "✅ Keycloak service is responding!"
          
          # Additional check for admin console - use a more reliable endpoint
          until curl -s -f --connect-timeout 5 http://padmini-keycloak-service:8180/admin/ >/dev/null 2>&1; do
            echo "Admin console not ready, waiting..."
            sleep 5
          done
          echo "✅ Admin console is accessible!"
        securityContext:
          runAsNonRoot: true
          runAsUser: 65534
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
  backoffLimit: 3
  ttlSecondsAfterFinished: 86400  # Keep job for 24 hours for debugging
