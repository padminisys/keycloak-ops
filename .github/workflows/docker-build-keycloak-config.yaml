name: 🐳 Build Keycloak Config Docker Image

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'keycloak/admin-api-config/**'
      - '.github/workflows/docker-build-keycloak-config.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'keycloak/admin-api-config/**'
      - '.github/workflows/docker-build-keycloak-config.yaml'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even without changes'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: padminisys/keycloak-config

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: 🔍 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: 🔧 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: 🔑 Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🛡️ Run Trivy vulnerability scanner (Dockerfile)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: 'keycloak/admin-api-config/Dockerfile'
        format: 'sarif'
        output: 'trivy-dockerfile-results.sarif'

    - name: 📤 Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-dockerfile-results.sarif'

    - name: 🐳 Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: keycloak/admin-api-config
        file: keycloak/admin-api-config/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Commenting out image scan for now - it tries to scan before image is available
    # - name: 🛡️ Run Trivy vulnerability scanner (Image)
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    #     format: 'sarif'
    #     output: 'trivy-image-results.sarif'

    # - name: 📤 Upload Trivy image scan results
    #   uses: github/codeql-action/upload-sarif@v3
    #   if: always()
    #   with:
    #     sarif_file: 'trivy-image-results.sarif'

    - name: 📝 Generate image summary
      run: |
        echo "## 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Image Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Image:** \`${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Tags:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Platforms:** \`linux/amd64, linux/arm64\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** \`$(date -u +"%Y-%m-%dT%H:%M:%SZ")\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Usage" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔐 Security" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Multi-stage build for minimal attack surface" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Non-root user execution" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Dockerfile security scanning enabled" >> $GITHUB_STEP_SUMMARY
        echo "- ⚠️ Image vulnerability scanning temporarily disabled" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Python 3.13 with latest security patches" >> $GITHUB_STEP_SUMMARY

    outputs:
      image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      tag: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
      digest: ${{ steps.build.outputs.digest }}
